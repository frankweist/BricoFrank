# write_docs_ascii.ps1 — Genera README.md y CHANGELOG.md en ASCII puro
$ErrorActionPreference = 'Stop'
Set-Location 'C:\gestor-reparaciones\apps\web'

# ------- README.md -------
$readme = @(
'# Gestor de Reparaciones — BricoFrank'
''
'SPA con React + TypeScript + Vite, persistencia local con IndexedDB (Dexie) y UI con Tailwind.'
''
'## Caracteristicas'
'- Registro de cliente con multiples equipos por alta. Categorias incluyen Baterias.'
'- Ordenes: busqueda, filtros (estado/fecha), ordenacion, Exportar CSV e Importar JSON.'
'- Presupuesto: calculo de mano de obra y piezas SIN IVA.'
'- Reparacion: costes, presets de tarifa, atajos de horas, timeline con plantillas, piezas, adjuntos, edicion de datos, Exportar JSON e Imprimir.'
''
'## Requisitos'
'- Node 18+ (recomendado 20+)'
'- npm 9+'
''
'## Instalacion y arranque'
'```bash'
'npm install'
'npm run dev'
'```'
''
'## Scripts'
'- npm run dev — desarrollo'
'- npm run build — produccion'
'- npm run preview — previsualizacion del build'
''
'## Estructura'
'```'
'apps/web/'
'  index.html'
'  package.json'
'  postcss.config.js'
'  src/'
'    App.tsx'
'    styles.css'
'    data/db.ts'
'    domain/types.ts'
'    modules/'
'      app/Layout.tsx'
'      registro/Registro.tsx'
'      ordenes/Ordenes.tsx'
'      presupuesto/Presupuesto.tsx'
'      reparacion/DetalleOrden.tsx'
'```'
''
'## Modelo de datos (Dexie)'
'- clientes: id, nombre, telefono, email?, fecha_alta'
'- equipos: id, clienteId, categoria, marca, modelo, numeroSerie?, descripcion, fecha_recepcion'
'- ordenes: id, codigo, equipoId, estado, creada, actualizada'
'- eventos: id, ordenId, tipo(nota|prueba|cambio_estado), texto, fecha'
'- piezas: id, ordenId, nombre, cantidad, coste, estado(pendiente|pedido|recibido|instalado)'
'- adjuntos (v2): id, ordenId, nombre, tipo, tam, fecha, blob'
''
'Estados: recepcion | diagnostico | reparacion | listo | entregado.'
''
'## Flujos'
'1) Registro -> crea 1 orden por equipo.'
'2) Ordenes -> buscar/filtrar y abrir.'
'3) Reparacion -> notas, piezas, adjuntos, costes, edicion, estados.'
'4) Exportar/Imprimir -> CSV/JSON o impresion.'
''
'## Exportar / Importar'
'- CSV desde Ordenes.'
'- JSON completo desde Reparacion.'
'- Importar JSON en Ordenes (sobrescribe tablas).'
''
'## Despliegue (GitHub Pages)'
'1) Ajusta base en vite.config.ts a "/NOMBRE_REPO/".'
'2) npm run build'
'3) Publica dist/ (por ejemplo, rama gh-pages).'
''
'## Troubleshooting'
'- Acentos: usar UTF-8 o escapes \\uXXXX si el editor cambia la codificacion.'
'- Tailwind 4: @tailwindcss/postcss en postcss.config.js.'
'- Cache Vite: borrar node_modules/.vite.'
''
'## Licencia'
'Privado. Uso interno BricoFrank.'
)
Set-Content README.md -Value $readme -Encoding utf8

# ------- CHANGELOG.md -------
$changelog = @(
'# Historial de cambios'
''
'## [Unreleased]'
'- Inventario de piezas con stock y proveedores.'
'- Hoja de recepcion con QR.'
'- Exportar a PDF del presupuesto.'
''
'## v0.6.0 — Plantillas y presets'
'- Plantillas rapidas de notas y diagnostico en Timeline.'
'- Presets de tarifa (20/25/30/35 EUR/h) y atajos de horas (0.5/1/2). Persistencia en localStorage.'
'- Mantiene calculo sin IVA.'
''
'## v0.5.0 — Adjuntos y filtros'
'- Adjuntos en Reparacion: subir, previsualizar, descargar y borrar (Dexie v2 con "adjuntos").'
'- Filtros en Ordenes: estado, fechas y ordenacion.'
'- Boton Imprimir con estilos de impresion.'
''
'## v0.4.0 — Exportacion/Importacion'
'- Exportar CSV en Ordenes.'
'- Importar JSON para restaurar backups.'
''
'## v0.3.0 — Registro multiple'
'- Registro admite varios equipos por cliente.'
'- Nueva categoria Baterias.'
''
'## v0.2.0 — Listado y presupuesto'
'- Listado de Ordenes con busqueda y navegacion.'
'- Calculo de Presupuesto sin IVA.'
''
'## v0.1.0 — Base'
'- Vite + React + TypeScript + Tailwind.'
'- Pestañas: Registro, Ordenes, Presupuesto, Reparacion.'
'- Dexie: clientes, equipos, ordenes, eventos y piezas.'
)
Set-Content CHANGELOG.md -Value $changelog -Encoding utf8

Write-Host 'README.md y CHANGELOG.md generados.'
